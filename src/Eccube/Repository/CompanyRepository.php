<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) LOCKON CO.,LTD. All Rights Reserved.
 *
 * http://www.lockon.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository;

use Doctrine\ORM\EntityRepository;
use Eccube\Doctrine\Query\Queries;
use Eccube\Common\EccubeConfig;
use Eccube\Entity\Company;
use Eccube\Util\StringUtil;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompanyRepository extends AbstractRepository
{
    /**
     * @var Queries
     */
    protected $queries;

    /**
     * @var EntityRepository
     */
    protected $entityRepository;

    /**
     * @var EccubeConfig
     */
    protected $eccubeConfig;

    /**
     * CompamyRepository constructor.
     *
     * @param RegistryInterface $registry
     * @param Queries $queries
     * @param EccubeConfig $eccubeConfig
     */
    public function __construct(RegistryInterface $registry, Queries $queries, EccubeConfig $eccubeConfig)
    {
        parent::__construct($registry, Company::class);
        $this->queries = $queries;
        $this->eccubeConfig = $eccubeConfig;
    }

    /**
     * 規格一覧を取得する.
     *
     * @return array 規格の配列
     */
    public function getList($searchData)
    {
        
    $qb = $this->createQueryBuilder('c')
       ->select('c');

    // Tìm kiếm theo ID
    if (isset($searchData['id']) && StringUtil::isNotBlank($searchData['id'])) {
        //Loại bỏ kí tự trống
        $id = preg_replace('/[　]+/u', '', $searchData['id']);
        $qb
            ->andWhere('c.id LIKE :id')
            ->setParameter('id', '%'.$id.'%');
    }

    // Tìm kiếm theo tên
    if (isset($searchData['name']) && StringUtil::isNotBlank($searchData['name'])) {
        //Loại bỏ kí tự trống
        $clean_key_multi = preg_replace('/[　]+/u', '', $searchData['name']);
        $space = $this->eccubeConfig->get('eccube_space');
        $qb
            ->andWhere('CONCAT(c.name, :space) LIKE :name ')
            ->setParameter('name', '%'.$clean_key_multi.'%')
            ->setParameter('space', $space);
    }
        
        // Order By
        $qb->addOrderBy('c.update_date', 'DESC');

        return $this->queries->customize(QueryKey::COMPANY_SEARCH, $qb, $searchData);
    }
}